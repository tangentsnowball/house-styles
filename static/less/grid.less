/* -------------------------------------------------------------
 * Grid Generator
 * Grid setup variables - column count, margins, etc. can be
 * found in variables.less
 * ---------------------------------------------------------- */


// Scaffolding
// -------------------------------------------------------------
/* -------------------------------------------------------------
 * IE8 will ignore border-box when max/min width applied,
 * solution is to create a wrapper for container and give that
 * the max width and margin below
 * ---------------------------------------------------------- */
.container {
    margin: 0 auto;
    padding: 0 10px;
    box-sizing: border-box;
    max-width: @grid-width;
} // /.container

.row {
    .clearfix;
    clear: both;

    [class*="span"] {
        float: left;
        margin-left: @column-gutter-pct;

        &:first-child {
            margin-left: 0;
        } // /&:first-child
    } // /[class*="span"]

    // Build columns
    // -------------------------------------------------------------
    /* http://blog.thehippo.de/2012/04/programming/do-a-loop-with-less-css/ */
    @column-iterations: @column-count;
    .columnLoopingClass(@column-index) when (@column-index > 0){
        .span@{column-index}{
            width: @column-width-pct * @column-index + (@column-gutter-pct * (@column-index - 1));
        }
        .columnLoopingClass(@column-index - 1);
    }
    .columnLoopingClass(0){}
    .columnLoopingClass(@column-iterations);

    // Build offsets - need to use new variables for this loop
    // -------------------------------------------------------------
    @offset-iterations: @column-count - 1;
    .offsetLoopingClass(@offset-index) when (@offset-index > 0){
        .offset@{offset-index}{
            .offset(@offset-index,1);
            &:first-child {
                .offset(@offset-index);
            }
        }
        .offsetLoopingClass(@offset-index - 1);
    }
    .offsetLoopingClass(0){}
    .offsetLoopingClass(@offset-iterations);

    // Fixed-spaced column grid for controlled nesting
    // -------------------------------------------------------------
    &.fixed-spacing {
        .row {
            margin-left: -@grid-spacing-fixed / 2;
            margin-right: -@grid-spacing-fixed / 2;
        } // /.row

        [class*="span"] {
            margin: 0;
            padding-left: @grid-spacing-fixed / 2;
            padding-right: @grid-spacing-fixed / 2;
            box-sizing: border-box;
        } // /[class*="span"]

        // Build fixed-spacing columns
        // -------------------------------------------------------------
        @fixed-iterations: @column-count;
        .fixedLoopingClass(@fixed-index) when (@fixed-index > 0){
            .span@{fixed-index}{
                width: @column-width-fixed * @fixed-index; // + (@column-gutter-pct * (@fixed-index - 1));
            }
            .fixedLoopingClass(@fixed-index - 1);
        }
        .fixedLoopingClass(0){}
        .fixedLoopingClass(@fixed-iterations);

        // Build offsets
        // -------------------------------------------------------------
        @fixedIndent-iterations: @column-count - 1;
        .fixedIndentLoopingClass(@fixedIndent-index) when (@fixedIndent-index > 0){
            .offset@{fixedIndent-index}{
                .fixedOffset(@fixedIndent-index);
            }
            .fixedIndentLoopingClass(@fixedIndent-index - 1);
        }
        .fixedIndentLoopingClass(0){}
        .fixedIndentLoopingClass(@fixedIndent-iterations);
    } // /&.fixed-spacing

    // Reverse layout for right to left, including offsets
    // -------------------------------------------------------------
    &.reverselayout {
        [class*="span"] {
            float: right;
            margin-right: @column-gutter-pct;
            margin-left: 0;

            &:first-child {
                margin-right: 0;
            } // /&:first-child
        } // /[class*="span"]

        // Build offsets
        // -------------------------------------------------------------
        @reverseIndent-iterations: @column-count - 1;
        .reverseIndentLoopingClass(@reverseIndent-index) when (@reverseIndent-index > 0){
            .offset@{reverseIndent-index}{
                .reverseOffset(@reverseIndent-index,1);
                &:first-child {
                    .reverseOffset(@reverseIndent-index);
                }
            }
            .reverseIndentLoopingClass(@reverseIndent-index - 1);
        }
        .reverseIndentLoopingClass(0){}
        .reverseIndentLoopingClass(@reverseIndent-iterations);

        &.fixed-spacing {
            [class*="span"] {
                margin: 0;
            } // /[class*="span"]
        } // /&.fixed-spacing
    } // /&.reverselayout
} // /.row

//pandering to IE7
.ie7 {
    .row {
        [class*="span"] {
            margin-right: -1px;
        } // /[class*="span"]
    } // /.row
} // /.ie7



/* -------------------------------------------------------------
 * Responsive Grid Generator
 * ---------------------------------------------------------- */
 @media screen and (min-width: 0) and (max-width: @breakpoint-mobile) {
    .row,
    .row.fixed-spacing {
        [class*="span"] {
            float: none;
            width: auto;
            margin-left: 0;
            padding: 0;
        } // /[class*="span"]

        [class*="offset"] {
            margin-left: 0;
            &:first-child {
                margin-left: 0;
            } // /&:first-child
        } // /[class*="offset"]

        .row {
            margin: 0;
        } // /.row

        // Non-collapsing grid
        &.fix {
            [class*="span"] {
                float: left;
                margin-left: @column-gutter-pct;

                &:first-child {
                    margin-left: 0;
                } // /&:first-child
            } // /[class*="span"]

            // Build columns
            // -------------------------------------------------------------
            @fix-iterations: @column-count;
            .fixLoopingClass(@fix-index) when (@fix-index > 0){
                .span@{fix-index}{
                    width: @column-width-pct * @fix-index + (@column-gutter-pct * (@fix-index - 1));
                }
                .fixLoopingClass(@fix-index - 1);
            }
            .fixLoopingClass(0){}
            .fixLoopingClass(@fix-iterations);

            // Build offsets - need to use new variables for this loop
            // -------------------------------------------------------------
            @offset-iterations: @column-count - 1;
            .offsetLoopingClass(@offset-index) when (@offset-index > 0){
                .offset@{offset-index}{
                    .offset(@offset-index,1);
                    &:first-child {
                        .offset(@offset-index);
                    }
                }
                .offsetLoopingClass(@offset-index - 1);
            }
            .offsetLoopingClass(0){}
            .offsetLoopingClass(@offset-iterations);
        } // /&.fix
    } // /.row, .row.fixed-spacing

    .row.reverselayout {
        [class*="span"] {
            float: none;
            margin: 0;
        } // /[class*="span"]

        [class*="offset"] {
            margin-right: 0;
            &:first-child {
                margin-right: 0;
            } // /&:first-child
        } // /[class*="offset"]
    } // /.row.reverselayout
}
