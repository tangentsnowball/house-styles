/* -----------------------------------------------------------------
 * Grid Generator
 * Grid setup variables - column count, margins, etc. can be
 * found in variables.scss
 * -------------------------------------------------------------- */


// Scaffolding
/* -----------------------------------------------------------------
 * IE8 will ignore border-box when max/min width applied,
 * solution is to create a wrapper for container and give that
 * the max width and margin below
 * -------------------------------------------------------------- */
.container {
    margin: 0 auto;
    padding: 0 10px;
    box-sizing: border-box;
    max-width: $grid-width;
} // /.container

.row {
    @include clearfix;
    clear: both;

    [class*="span"] {
        float: left;
        margin-left: $column-gutter-pct;

        &:first-child {
            margin-left: 0;
        } // /&:first-child
    } // /[class*="span"]

    // Build columns
    // -------------------------------------------------------------
    @for $i from 1 through $column-count {
        .span#{$i} {
            width: $column-width-pct * $i + ($column-gutter-pct * ($i - 1));
        } // /.span#{$i}
    } // /Build columns

    // Build offsets
    // -------------------------------------------------------------
    @for $i from 1 through ($column-count - 1) {
        .offset#{$i} {
            @include offset($i, 1);
            &:first-child {
                @include offset($i);
            } // /&:first-child
        } // /.offset#{$i}
    } // /Build offsets

    // Fixed-spaced column grid for controlled nesting
    // -------------------------------------------------------------
    &.fixed-spacing {
        .row {
            margin-left: -$grid-spacing-fixed / 2;
            margin-right: -$grid-spacing-fixed / 2;
        } // /.row

        [class*="span"] {
            margin: 0;
            padding-left: $grid-spacing-fixed / 2;
            padding-right: $grid-spacing-fixed / 2;
            box-sizing: border-box;
        } // /[class*="span"]

        // Build fixed-spacing columns
        // ---------------------------------------------------------

        @for $i from 1 through $column-count {
            .span#{$i} {
                width: $column-width-fixed * $i;
            } // /.span#{$i}
        } // /Build fixed-spacing columns

        // Build offsets
        // ---------------------------------------------------------
        @for $i from 1 through ($column-count - 1) {
            .offset#{$i} {
                @include fixedOffset($i);
            } // /.offset#{$i}
        } // /Build offsets
    } // /&.fixed-spacing

    // Reverse layout for right to left, including offsets
    // -------------------------------------------------------------
    &.reverselayout {
        [class*="span"] {
            float: right;
            margin-right: $column-gutter-pct;
            margin-left: 0;

            &:first-child {
                margin-right: 0;
            } // /&:first-child
        } // /[class*="span"]

        // Build reverse offsets
        // ---------------------------------------------------------
        @for $i from 1 through ($column-count - 1) {
            .offset#{$i}{
                @include reverseOffset($i, 1);
                &:first-child {
                    @include reverseOffset($i);
                } // /&:first-child
            }
        } // /Build reverse offsets

        &.fixed-spacing {
            [class*="span"] {
                margin: 0;
            } // /[class*="span"]
        } // /&.fixed-spacing
    } // /&.reverselayout
} // /.row

//pandering to IE7
.ie7 {
    .row {
        [class*="span"] {
            margin-right: -1px;
        } // /[class*="span"]
    } // /.row
} // /.ie7



/* -----------------------------------------------------------------
 * Responsive Grid Generator
 * -------------------------------------------------------------- */
 @media screen and (max-width: $breakpoint-mobile) {
    .row,
    .row.fixed-spacing {
        [class*="span"] {
            float: none;
            width: auto;
            margin-left: 0;
            padding: 0;
        } // /[class*="span"]

        [class*="offset"] {
            margin-left: 0;
            &:first-child {
                margin-left: 0;
            } // /&:first-child
        } // /[class*="offset"]

        .row {
            margin: 0;
        } // /.row

        // Non-collapsing grid
        &.fix {
            [class*="span"] {
                float: left;
                margin-left: $column-gutter-pct;

                &:first-child {
                    margin-left: 0;
                } // /&:first-child
            } // /[class*="span"]

            // Build columns
            // -----------------------------------------------------
            @for $i from 1 through $column-count {
                .span#{$i} {
                    width: $column-width-pct * $i + ($column-gutter-pct * ($i - 1));
                } // /.span#{$i}
            } // /Build columns

            // Build offsets
            // -----------------------------------------------------
            @for $i from 1 through ($column-count  - 1) {
                .offset#{$i} {
                    @include offset($i,1);
                    &:first-child {
                        @include offset($i);
                    } // /&:first-child
                } // /.offset#{$i}
            } // /Build offsets
        } // /&.fix
    } // /.row, .row.fixed-spacing

    .row.reverselayout {
        [class*="span"] {
            float: none;
            margin: 0;
        } // /[class*="span"]

        [class*="offset"] {
            margin-right: 0;
            &:first-child {
                margin-right: 0;
            } // /&:first-child
        } // /[class*="offset"]
    } // /.row.reverselayout
}
